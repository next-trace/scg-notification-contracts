// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: proto/scg/provenance/v1/enums.proto

package provenancev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ProvenanceRecordStatus represents the status of a provenance record
type ProvenanceRecordStatus int32

const (
	ProvenanceRecordStatus_PROVENANCE_RECORD_STATUS_UNSPECIFIED ProvenanceRecordStatus = 0
	ProvenanceRecordStatus_PROVENANCE_RECORD_STATUS_CREATED     ProvenanceRecordStatus = 1
	ProvenanceRecordStatus_PROVENANCE_RECORD_STATUS_VERIFIED    ProvenanceRecordStatus = 2
	ProvenanceRecordStatus_PROVENANCE_RECORD_STATUS_DISPUTED    ProvenanceRecordStatus = 3
	ProvenanceRecordStatus_PROVENANCE_RECORD_STATUS_AMENDED     ProvenanceRecordStatus = 4
	ProvenanceRecordStatus_PROVENANCE_RECORD_STATUS_INVALIDATED ProvenanceRecordStatus = 5
)

// Enum value maps for ProvenanceRecordStatus.
var (
	ProvenanceRecordStatus_name = map[int32]string{
		0: "PROVENANCE_RECORD_STATUS_UNSPECIFIED",
		1: "PROVENANCE_RECORD_STATUS_CREATED",
		2: "PROVENANCE_RECORD_STATUS_VERIFIED",
		3: "PROVENANCE_RECORD_STATUS_DISPUTED",
		4: "PROVENANCE_RECORD_STATUS_AMENDED",
		5: "PROVENANCE_RECORD_STATUS_INVALIDATED",
	}
	ProvenanceRecordStatus_value = map[string]int32{
		"PROVENANCE_RECORD_STATUS_UNSPECIFIED": 0,
		"PROVENANCE_RECORD_STATUS_CREATED":     1,
		"PROVENANCE_RECORD_STATUS_VERIFIED":    2,
		"PROVENANCE_RECORD_STATUS_DISPUTED":    3,
		"PROVENANCE_RECORD_STATUS_AMENDED":     4,
		"PROVENANCE_RECORD_STATUS_INVALIDATED": 5,
	}
)

func (x ProvenanceRecordStatus) Enum() *ProvenanceRecordStatus {
	p := new(ProvenanceRecordStatus)
	*p = x
	return p
}

func (x ProvenanceRecordStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProvenanceRecordStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_scg_provenance_v1_enums_proto_enumTypes[0].Descriptor()
}

func (ProvenanceRecordStatus) Type() protoreflect.EnumType {
	return &file_proto_scg_provenance_v1_enums_proto_enumTypes[0]
}

func (x ProvenanceRecordStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProvenanceRecordStatus.Descriptor instead.
func (ProvenanceRecordStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_scg_provenance_v1_enums_proto_rawDescGZIP(), []int{0}
}

// ProvenanceRecordType represents the type of provenance record
type ProvenanceRecordType int32

const (
	ProvenanceRecordType_PROVENANCE_RECORD_TYPE_UNSPECIFIED        ProvenanceRecordType = 0
	ProvenanceRecordType_PROVENANCE_RECORD_TYPE_ORIGIN             ProvenanceRecordType = 1
	ProvenanceRecordType_PROVENANCE_RECORD_TYPE_PROCESSING         ProvenanceRecordType = 2
	ProvenanceRecordType_PROVENANCE_RECORD_TYPE_TRANSFORMATION     ProvenanceRecordType = 3
	ProvenanceRecordType_PROVENANCE_RECORD_TYPE_TRANSPORTATION     ProvenanceRecordType = 4
	ProvenanceRecordType_PROVENANCE_RECORD_TYPE_STORAGE            ProvenanceRecordType = 5
	ProvenanceRecordType_PROVENANCE_RECORD_TYPE_INSPECTION         ProvenanceRecordType = 6
	ProvenanceRecordType_PROVENANCE_RECORD_TYPE_CERTIFICATION      ProvenanceRecordType = 7
	ProvenanceRecordType_PROVENANCE_RECORD_TYPE_OWNERSHIP_TRANSFER ProvenanceRecordType = 8
)

// Enum value maps for ProvenanceRecordType.
var (
	ProvenanceRecordType_name = map[int32]string{
		0: "PROVENANCE_RECORD_TYPE_UNSPECIFIED",
		1: "PROVENANCE_RECORD_TYPE_ORIGIN",
		2: "PROVENANCE_RECORD_TYPE_PROCESSING",
		3: "PROVENANCE_RECORD_TYPE_TRANSFORMATION",
		4: "PROVENANCE_RECORD_TYPE_TRANSPORTATION",
		5: "PROVENANCE_RECORD_TYPE_STORAGE",
		6: "PROVENANCE_RECORD_TYPE_INSPECTION",
		7: "PROVENANCE_RECORD_TYPE_CERTIFICATION",
		8: "PROVENANCE_RECORD_TYPE_OWNERSHIP_TRANSFER",
	}
	ProvenanceRecordType_value = map[string]int32{
		"PROVENANCE_RECORD_TYPE_UNSPECIFIED":        0,
		"PROVENANCE_RECORD_TYPE_ORIGIN":             1,
		"PROVENANCE_RECORD_TYPE_PROCESSING":         2,
		"PROVENANCE_RECORD_TYPE_TRANSFORMATION":     3,
		"PROVENANCE_RECORD_TYPE_TRANSPORTATION":     4,
		"PROVENANCE_RECORD_TYPE_STORAGE":            5,
		"PROVENANCE_RECORD_TYPE_INSPECTION":         6,
		"PROVENANCE_RECORD_TYPE_CERTIFICATION":      7,
		"PROVENANCE_RECORD_TYPE_OWNERSHIP_TRANSFER": 8,
	}
)

func (x ProvenanceRecordType) Enum() *ProvenanceRecordType {
	p := new(ProvenanceRecordType)
	*p = x
	return p
}

func (x ProvenanceRecordType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProvenanceRecordType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_scg_provenance_v1_enums_proto_enumTypes[1].Descriptor()
}

func (ProvenanceRecordType) Type() protoreflect.EnumType {
	return &file_proto_scg_provenance_v1_enums_proto_enumTypes[1]
}

func (x ProvenanceRecordType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProvenanceRecordType.Descriptor instead.
func (ProvenanceRecordType) EnumDescriptor() ([]byte, []int) {
	return file_proto_scg_provenance_v1_enums_proto_rawDescGZIP(), []int{1}
}

// ProvenanceVerificationMethod represents the method used to verify provenance
type ProvenanceVerificationMethod int32

const (
	ProvenanceVerificationMethod_PROVENANCE_VERIFICATION_METHOD_UNSPECIFIED         ProvenanceVerificationMethod = 0
	ProvenanceVerificationMethod_PROVENANCE_VERIFICATION_METHOD_DOCUMENT            ProvenanceVerificationMethod = 1
	ProvenanceVerificationMethod_PROVENANCE_VERIFICATION_METHOD_DIGITAL_SIGNATURE   ProvenanceVerificationMethod = 2
	ProvenanceVerificationMethod_PROVENANCE_VERIFICATION_METHOD_BLOCKCHAIN          ProvenanceVerificationMethod = 3
	ProvenanceVerificationMethod_PROVENANCE_VERIFICATION_METHOD_THIRD_PARTY         ProvenanceVerificationMethod = 4
	ProvenanceVerificationMethod_PROVENANCE_VERIFICATION_METHOD_PHYSICAL_INSPECTION ProvenanceVerificationMethod = 5
	ProvenanceVerificationMethod_PROVENANCE_VERIFICATION_METHOD_LABORATORY_TESTING  ProvenanceVerificationMethod = 6
)

// Enum value maps for ProvenanceVerificationMethod.
var (
	ProvenanceVerificationMethod_name = map[int32]string{
		0: "PROVENANCE_VERIFICATION_METHOD_UNSPECIFIED",
		1: "PROVENANCE_VERIFICATION_METHOD_DOCUMENT",
		2: "PROVENANCE_VERIFICATION_METHOD_DIGITAL_SIGNATURE",
		3: "PROVENANCE_VERIFICATION_METHOD_BLOCKCHAIN",
		4: "PROVENANCE_VERIFICATION_METHOD_THIRD_PARTY",
		5: "PROVENANCE_VERIFICATION_METHOD_PHYSICAL_INSPECTION",
		6: "PROVENANCE_VERIFICATION_METHOD_LABORATORY_TESTING",
	}
	ProvenanceVerificationMethod_value = map[string]int32{
		"PROVENANCE_VERIFICATION_METHOD_UNSPECIFIED":         0,
		"PROVENANCE_VERIFICATION_METHOD_DOCUMENT":            1,
		"PROVENANCE_VERIFICATION_METHOD_DIGITAL_SIGNATURE":   2,
		"PROVENANCE_VERIFICATION_METHOD_BLOCKCHAIN":          3,
		"PROVENANCE_VERIFICATION_METHOD_THIRD_PARTY":         4,
		"PROVENANCE_VERIFICATION_METHOD_PHYSICAL_INSPECTION": 5,
		"PROVENANCE_VERIFICATION_METHOD_LABORATORY_TESTING":  6,
	}
)

func (x ProvenanceVerificationMethod) Enum() *ProvenanceVerificationMethod {
	p := new(ProvenanceVerificationMethod)
	*p = x
	return p
}

func (x ProvenanceVerificationMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProvenanceVerificationMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_scg_provenance_v1_enums_proto_enumTypes[2].Descriptor()
}

func (ProvenanceVerificationMethod) Type() protoreflect.EnumType {
	return &file_proto_scg_provenance_v1_enums_proto_enumTypes[2]
}

func (x ProvenanceVerificationMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProvenanceVerificationMethod.Descriptor instead.
func (ProvenanceVerificationMethod) EnumDescriptor() ([]byte, []int) {
	return file_proto_scg_provenance_v1_enums_proto_rawDescGZIP(), []int{2}
}

// ProvenanceDisputeReason represents the reason for disputing a provenance record
type ProvenanceDisputeReason int32

const (
	ProvenanceDisputeReason_PROVENANCE_DISPUTE_REASON_UNSPECIFIED               ProvenanceDisputeReason = 0
	ProvenanceDisputeReason_PROVENANCE_DISPUTE_REASON_INACCURATE_INFORMATION    ProvenanceDisputeReason = 1
	ProvenanceDisputeReason_PROVENANCE_DISPUTE_REASON_MISSING_INFORMATION       ProvenanceDisputeReason = 2
	ProvenanceDisputeReason_PROVENANCE_DISPUTE_REASON_FRAUDULENT_CLAIM          ProvenanceDisputeReason = 3
	ProvenanceDisputeReason_PROVENANCE_DISPUTE_REASON_UNAUTHORIZED_MODIFICATION ProvenanceDisputeReason = 4
	ProvenanceDisputeReason_PROVENANCE_DISPUTE_REASON_CONFLICTING_RECORDS       ProvenanceDisputeReason = 5
	ProvenanceDisputeReason_PROVENANCE_DISPUTE_REASON_OTHER                     ProvenanceDisputeReason = 6
)

// Enum value maps for ProvenanceDisputeReason.
var (
	ProvenanceDisputeReason_name = map[int32]string{
		0: "PROVENANCE_DISPUTE_REASON_UNSPECIFIED",
		1: "PROVENANCE_DISPUTE_REASON_INACCURATE_INFORMATION",
		2: "PROVENANCE_DISPUTE_REASON_MISSING_INFORMATION",
		3: "PROVENANCE_DISPUTE_REASON_FRAUDULENT_CLAIM",
		4: "PROVENANCE_DISPUTE_REASON_UNAUTHORIZED_MODIFICATION",
		5: "PROVENANCE_DISPUTE_REASON_CONFLICTING_RECORDS",
		6: "PROVENANCE_DISPUTE_REASON_OTHER",
	}
	ProvenanceDisputeReason_value = map[string]int32{
		"PROVENANCE_DISPUTE_REASON_UNSPECIFIED":               0,
		"PROVENANCE_DISPUTE_REASON_INACCURATE_INFORMATION":    1,
		"PROVENANCE_DISPUTE_REASON_MISSING_INFORMATION":       2,
		"PROVENANCE_DISPUTE_REASON_FRAUDULENT_CLAIM":          3,
		"PROVENANCE_DISPUTE_REASON_UNAUTHORIZED_MODIFICATION": 4,
		"PROVENANCE_DISPUTE_REASON_CONFLICTING_RECORDS":       5,
		"PROVENANCE_DISPUTE_REASON_OTHER":                     6,
	}
)

func (x ProvenanceDisputeReason) Enum() *ProvenanceDisputeReason {
	p := new(ProvenanceDisputeReason)
	*p = x
	return p
}

func (x ProvenanceDisputeReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProvenanceDisputeReason) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_scg_provenance_v1_enums_proto_enumTypes[3].Descriptor()
}

func (ProvenanceDisputeReason) Type() protoreflect.EnumType {
	return &file_proto_scg_provenance_v1_enums_proto_enumTypes[3]
}

func (x ProvenanceDisputeReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProvenanceDisputeReason.Descriptor instead.
func (ProvenanceDisputeReason) EnumDescriptor() ([]byte, []int) {
	return file_proto_scg_provenance_v1_enums_proto_rawDescGZIP(), []int{3}
}

var File_proto_scg_provenance_v1_enums_proto protoreflect.FileDescriptor

const file_proto_scg_provenance_v1_enums_proto_rawDesc = "" +
	"\n" +
	"#proto/scg/provenance/v1/enums.proto\x12'proto.scg.notification.provenance.enums*\x86\x02\n" +
	"\x16ProvenanceRecordStatus\x12(\n" +
	"$PROVENANCE_RECORD_STATUS_UNSPECIFIED\x10\x00\x12$\n" +
	" PROVENANCE_RECORD_STATUS_CREATED\x10\x01\x12%\n" +
	"!PROVENANCE_RECORD_STATUS_VERIFIED\x10\x02\x12%\n" +
	"!PROVENANCE_RECORD_STATUS_DISPUTED\x10\x03\x12$\n" +
	" PROVENANCE_RECORD_STATUS_AMENDED\x10\x04\x12(\n" +
	"$PROVENANCE_RECORD_STATUS_INVALIDATED\x10\x05*\x82\x03\n" +
	"\x14ProvenanceRecordType\x12&\n" +
	"\"PROVENANCE_RECORD_TYPE_UNSPECIFIED\x10\x00\x12!\n" +
	"\x1dPROVENANCE_RECORD_TYPE_ORIGIN\x10\x01\x12%\n" +
	"!PROVENANCE_RECORD_TYPE_PROCESSING\x10\x02\x12)\n" +
	"%PROVENANCE_RECORD_TYPE_TRANSFORMATION\x10\x03\x12)\n" +
	"%PROVENANCE_RECORD_TYPE_TRANSPORTATION\x10\x04\x12\"\n" +
	"\x1ePROVENANCE_RECORD_TYPE_STORAGE\x10\x05\x12%\n" +
	"!PROVENANCE_RECORD_TYPE_INSPECTION\x10\x06\x12(\n" +
	"$PROVENANCE_RECORD_TYPE_CERTIFICATION\x10\a\x12-\n" +
	")PROVENANCE_RECORD_TYPE_OWNERSHIP_TRANSFER\x10\b*\xff\x02\n" +
	"\x1cProvenanceVerificationMethod\x12.\n" +
	"*PROVENANCE_VERIFICATION_METHOD_UNSPECIFIED\x10\x00\x12+\n" +
	"'PROVENANCE_VERIFICATION_METHOD_DOCUMENT\x10\x01\x124\n" +
	"0PROVENANCE_VERIFICATION_METHOD_DIGITAL_SIGNATURE\x10\x02\x12-\n" +
	")PROVENANCE_VERIFICATION_METHOD_BLOCKCHAIN\x10\x03\x12.\n" +
	"*PROVENANCE_VERIFICATION_METHOD_THIRD_PARTY\x10\x04\x126\n" +
	"2PROVENANCE_VERIFICATION_METHOD_PHYSICAL_INSPECTION\x10\x05\x125\n" +
	"1PROVENANCE_VERIFICATION_METHOD_LABORATORY_TESTING\x10\x06*\xee\x02\n" +
	"\x17ProvenanceDisputeReason\x12)\n" +
	"%PROVENANCE_DISPUTE_REASON_UNSPECIFIED\x10\x00\x124\n" +
	"0PROVENANCE_DISPUTE_REASON_INACCURATE_INFORMATION\x10\x01\x121\n" +
	"-PROVENANCE_DISPUTE_REASON_MISSING_INFORMATION\x10\x02\x12.\n" +
	"*PROVENANCE_DISPUTE_REASON_FRAUDULENT_CLAIM\x10\x03\x127\n" +
	"3PROVENANCE_DISPUTE_REASON_UNAUTHORIZED_MODIFICATION\x10\x04\x121\n" +
	"-PROVENANCE_DISPUTE_REASON_CONFLICTING_RECORDS\x10\x05\x12#\n" +
	"\x1fPROVENANCE_DISPUTE_REASON_OTHER\x10\x06B^Z\\github.com/next-trace/scg-notification-contracts/gen/go/proto/scg/provenance/v1;provenancev1b\x06proto3"

var (
	file_proto_scg_provenance_v1_enums_proto_rawDescOnce sync.Once
	file_proto_scg_provenance_v1_enums_proto_rawDescData []byte
)

func file_proto_scg_provenance_v1_enums_proto_rawDescGZIP() []byte {
	file_proto_scg_provenance_v1_enums_proto_rawDescOnce.Do(func() {
		file_proto_scg_provenance_v1_enums_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_scg_provenance_v1_enums_proto_rawDesc), len(file_proto_scg_provenance_v1_enums_proto_rawDesc)))
	})
	return file_proto_scg_provenance_v1_enums_proto_rawDescData
}

var file_proto_scg_provenance_v1_enums_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_proto_scg_provenance_v1_enums_proto_goTypes = []any{
	(ProvenanceRecordStatus)(0),       // 0: proto.scg.notification.provenance.enums.ProvenanceRecordStatus
	(ProvenanceRecordType)(0),         // 1: proto.scg.notification.provenance.enums.ProvenanceRecordType
	(ProvenanceVerificationMethod)(0), // 2: proto.scg.notification.provenance.enums.ProvenanceVerificationMethod
	(ProvenanceDisputeReason)(0),      // 3: proto.scg.notification.provenance.enums.ProvenanceDisputeReason
}
var file_proto_scg_provenance_v1_enums_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_scg_provenance_v1_enums_proto_init() }
func file_proto_scg_provenance_v1_enums_proto_init() {
	if File_proto_scg_provenance_v1_enums_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_scg_provenance_v1_enums_proto_rawDesc), len(file_proto_scg_provenance_v1_enums_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_scg_provenance_v1_enums_proto_goTypes,
		DependencyIndexes: file_proto_scg_provenance_v1_enums_proto_depIdxs,
		EnumInfos:         file_proto_scg_provenance_v1_enums_proto_enumTypes,
	}.Build()
	File_proto_scg_provenance_v1_enums_proto = out.File
	file_proto_scg_provenance_v1_enums_proto_goTypes = nil
	file_proto_scg_provenance_v1_enums_proto_depIdxs = nil
}
