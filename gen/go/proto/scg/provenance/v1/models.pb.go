// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: proto/scg/provenance/v1/models.proto

package provenancev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ProvenanceRecord represents a record of provenance for an entity
type ProvenanceRecord struct {
	state              protoimpl.MessageState       `protogen:"open.v1"`
	Id                 string                       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	EntityId           string                       `protobuf:"bytes,2,opt,name=entity_id,proto3" json:"entity_id,omitempty"`
	EntityType         string                       `protobuf:"bytes,3,opt,name=entity_type,proto3" json:"entity_type,omitempty"`
	RecordType         ProvenanceRecordType         `protobuf:"varint,4,opt,name=record_type,proto3,enum=proto.scg.notification.provenance.enums.ProvenanceRecordType" json:"record_type,omitempty"`
	Status             ProvenanceRecordStatus       `protobuf:"varint,5,opt,name=status,proto3,enum=proto.scg.notification.provenance.enums.ProvenanceRecordStatus" json:"status,omitempty"`
	Location           string                       `protobuf:"bytes,6,opt,name=location,proto3" json:"location,omitempty"`
	ActorId            string                       `protobuf:"bytes,7,opt,name=actor_id,proto3" json:"actor_id,omitempty"`
	ActorName          string                       `protobuf:"bytes,8,opt,name=actor_name,proto3" json:"actor_name,omitempty"`
	OrganizationId     string                       `protobuf:"bytes,9,opt,name=organization_id,proto3" json:"organization_id,omitempty"`
	OrganizationName   string                       `protobuf:"bytes,10,opt,name=organization_name,proto3" json:"organization_name,omitempty"`
	Description        string                       `protobuf:"bytes,11,opt,name=description,proto3" json:"description,omitempty"`
	Data               *structpb.Struct             `protobuf:"bytes,12,opt,name=data,proto3" json:"data,omitempty"`
	EvidenceUrls       []string                     `protobuf:"bytes,13,rep,name=evidence_urls,proto3" json:"evidence_urls,omitempty"`
	VerificationMethod ProvenanceVerificationMethod `protobuf:"varint,14,opt,name=verification_method,proto3,enum=proto.scg.notification.provenance.enums.ProvenanceVerificationMethod" json:"verification_method,omitempty"`
	VerifierId         string                       `protobuf:"bytes,15,opt,name=verifier_id,proto3" json:"verifier_id,omitempty"`
	VerifierName       string                       `protobuf:"bytes,16,opt,name=verifier_name,proto3" json:"verifier_name,omitempty"`
	VerifiedAt         *timestamppb.Timestamp       `protobuf:"bytes,17,opt,name=verified_at,proto3" json:"verified_at,omitempty"`
	VerificationNotes  string                       `protobuf:"bytes,18,opt,name=verification_notes,proto3" json:"verification_notes,omitempty"`
	OccurredAt         *timestamppb.Timestamp       `protobuf:"bytes,19,opt,name=occurred_at,proto3" json:"occurred_at,omitempty"`
	RecordedAt         *timestamppb.Timestamp       `protobuf:"bytes,20,opt,name=recorded_at,proto3" json:"recorded_at,omitempty"`
	PreviousRecordId   string                       `protobuf:"bytes,21,opt,name=previous_record_id,proto3" json:"previous_record_id,omitempty"`
	NextRecordId       string                       `protobuf:"bytes,22,opt,name=next_record_id,proto3" json:"next_record_id,omitempty"`
	Metadata           map[string]string            `protobuf:"bytes,23,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ProvenanceRecord) Reset() {
	*x = ProvenanceRecord{}
	mi := &file_proto_scg_provenance_v1_models_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProvenanceRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvenanceRecord) ProtoMessage() {}

func (x *ProvenanceRecord) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scg_provenance_v1_models_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvenanceRecord.ProtoReflect.Descriptor instead.
func (*ProvenanceRecord) Descriptor() ([]byte, []int) {
	return file_proto_scg_provenance_v1_models_proto_rawDescGZIP(), []int{0}
}

func (x *ProvenanceRecord) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProvenanceRecord) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

func (x *ProvenanceRecord) GetEntityType() string {
	if x != nil {
		return x.EntityType
	}
	return ""
}

func (x *ProvenanceRecord) GetRecordType() ProvenanceRecordType {
	if x != nil {
		return x.RecordType
	}
	return ProvenanceRecordType_PROVENANCE_RECORD_TYPE_UNSPECIFIED
}

func (x *ProvenanceRecord) GetStatus() ProvenanceRecordStatus {
	if x != nil {
		return x.Status
	}
	return ProvenanceRecordStatus_PROVENANCE_RECORD_STATUS_UNSPECIFIED
}

func (x *ProvenanceRecord) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *ProvenanceRecord) GetActorId() string {
	if x != nil {
		return x.ActorId
	}
	return ""
}

func (x *ProvenanceRecord) GetActorName() string {
	if x != nil {
		return x.ActorName
	}
	return ""
}

func (x *ProvenanceRecord) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *ProvenanceRecord) GetOrganizationName() string {
	if x != nil {
		return x.OrganizationName
	}
	return ""
}

func (x *ProvenanceRecord) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ProvenanceRecord) GetData() *structpb.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ProvenanceRecord) GetEvidenceUrls() []string {
	if x != nil {
		return x.EvidenceUrls
	}
	return nil
}

func (x *ProvenanceRecord) GetVerificationMethod() ProvenanceVerificationMethod {
	if x != nil {
		return x.VerificationMethod
	}
	return ProvenanceVerificationMethod_PROVENANCE_VERIFICATION_METHOD_UNSPECIFIED
}

func (x *ProvenanceRecord) GetVerifierId() string {
	if x != nil {
		return x.VerifierId
	}
	return ""
}

func (x *ProvenanceRecord) GetVerifierName() string {
	if x != nil {
		return x.VerifierName
	}
	return ""
}

func (x *ProvenanceRecord) GetVerifiedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.VerifiedAt
	}
	return nil
}

func (x *ProvenanceRecord) GetVerificationNotes() string {
	if x != nil {
		return x.VerificationNotes
	}
	return ""
}

func (x *ProvenanceRecord) GetOccurredAt() *timestamppb.Timestamp {
	if x != nil {
		return x.OccurredAt
	}
	return nil
}

func (x *ProvenanceRecord) GetRecordedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.RecordedAt
	}
	return nil
}

func (x *ProvenanceRecord) GetPreviousRecordId() string {
	if x != nil {
		return x.PreviousRecordId
	}
	return ""
}

func (x *ProvenanceRecord) GetNextRecordId() string {
	if x != nil {
		return x.NextRecordId
	}
	return ""
}

func (x *ProvenanceRecord) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// ProvenanceChain represents a chain of provenance records for an entity
type ProvenanceChain struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	EntityId      string                 `protobuf:"bytes,2,opt,name=entity_id,proto3" json:"entity_id,omitempty"`
	EntityType    string                 `protobuf:"bytes,3,opt,name=entity_type,proto3" json:"entity_type,omitempty"`
	RecordIds     []string               `protobuf:"bytes,4,rep,name=record_ids,proto3" json:"record_ids,omitempty"`
	IsComplete    bool                   `protobuf:"varint,5,opt,name=is_complete,proto3" json:"is_complete,omitempty"`
	IsVerified    bool                   `protobuf:"varint,6,opt,name=is_verified,proto3" json:"is_verified,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,proto3" json:"created_at,omitempty"`
	LastUpdatedAt *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=last_updated_at,proto3" json:"last_updated_at,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,9,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProvenanceChain) Reset() {
	*x = ProvenanceChain{}
	mi := &file_proto_scg_provenance_v1_models_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProvenanceChain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvenanceChain) ProtoMessage() {}

func (x *ProvenanceChain) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scg_provenance_v1_models_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvenanceChain.ProtoReflect.Descriptor instead.
func (*ProvenanceChain) Descriptor() ([]byte, []int) {
	return file_proto_scg_provenance_v1_models_proto_rawDescGZIP(), []int{1}
}

func (x *ProvenanceChain) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProvenanceChain) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

func (x *ProvenanceChain) GetEntityType() string {
	if x != nil {
		return x.EntityType
	}
	return ""
}

func (x *ProvenanceChain) GetRecordIds() []string {
	if x != nil {
		return x.RecordIds
	}
	return nil
}

func (x *ProvenanceChain) GetIsComplete() bool {
	if x != nil {
		return x.IsComplete
	}
	return false
}

func (x *ProvenanceChain) GetIsVerified() bool {
	if x != nil {
		return x.IsVerified
	}
	return false
}

func (x *ProvenanceChain) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ProvenanceChain) GetLastUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdatedAt
	}
	return nil
}

func (x *ProvenanceChain) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// ProvenanceDispute represents a dispute against a provenance record
type ProvenanceDispute struct {
	state                     protoimpl.MessageState  `protogen:"open.v1"`
	Id                        string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProvenanceRecordId        string                  `protobuf:"bytes,2,opt,name=provenance_record_id,proto3" json:"provenance_record_id,omitempty"`
	EntityId                  string                  `protobuf:"bytes,3,opt,name=entity_id,proto3" json:"entity_id,omitempty"`
	EntityType                string                  `protobuf:"bytes,4,opt,name=entity_type,proto3" json:"entity_type,omitempty"`
	DisputantId               string                  `protobuf:"bytes,5,opt,name=disputant_id,proto3" json:"disputant_id,omitempty"`
	DisputantName             string                  `protobuf:"bytes,6,opt,name=disputant_name,proto3" json:"disputant_name,omitempty"`
	DisputantOrganizationId   string                  `protobuf:"bytes,7,opt,name=disputant_organization_id,proto3" json:"disputant_organization_id,omitempty"`
	DisputantOrganizationName string                  `protobuf:"bytes,8,opt,name=disputant_organization_name,proto3" json:"disputant_organization_name,omitempty"`
	Reason                    ProvenanceDisputeReason `protobuf:"varint,9,opt,name=reason,proto3,enum=proto.scg.notification.provenance.enums.ProvenanceDisputeReason" json:"reason,omitempty"`
	Description               string                  `protobuf:"bytes,10,opt,name=description,proto3" json:"description,omitempty"`
	EvidenceUrls              []string                `protobuf:"bytes,11,rep,name=evidence_urls,proto3" json:"evidence_urls,omitempty"`
	Status                    string                  `protobuf:"bytes,12,opt,name=status,proto3" json:"status,omitempty"`
	Resolution                string                  `protobuf:"bytes,13,opt,name=resolution,proto3" json:"resolution,omitempty"`
	ResolverId                string                  `protobuf:"bytes,14,opt,name=resolver_id,proto3" json:"resolver_id,omitempty"`
	ResolverName              string                  `protobuf:"bytes,15,opt,name=resolver_name,proto3" json:"resolver_name,omitempty"`
	DisputedAt                *timestamppb.Timestamp  `protobuf:"bytes,16,opt,name=disputed_at,proto3" json:"disputed_at,omitempty"`
	ResolvedAt                *timestamppb.Timestamp  `protobuf:"bytes,17,opt,name=resolved_at,proto3" json:"resolved_at,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *ProvenanceDispute) Reset() {
	*x = ProvenanceDispute{}
	mi := &file_proto_scg_provenance_v1_models_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProvenanceDispute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvenanceDispute) ProtoMessage() {}

func (x *ProvenanceDispute) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scg_provenance_v1_models_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvenanceDispute.ProtoReflect.Descriptor instead.
func (*ProvenanceDispute) Descriptor() ([]byte, []int) {
	return file_proto_scg_provenance_v1_models_proto_rawDescGZIP(), []int{2}
}

func (x *ProvenanceDispute) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProvenanceDispute) GetProvenanceRecordId() string {
	if x != nil {
		return x.ProvenanceRecordId
	}
	return ""
}

func (x *ProvenanceDispute) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

func (x *ProvenanceDispute) GetEntityType() string {
	if x != nil {
		return x.EntityType
	}
	return ""
}

func (x *ProvenanceDispute) GetDisputantId() string {
	if x != nil {
		return x.DisputantId
	}
	return ""
}

func (x *ProvenanceDispute) GetDisputantName() string {
	if x != nil {
		return x.DisputantName
	}
	return ""
}

func (x *ProvenanceDispute) GetDisputantOrganizationId() string {
	if x != nil {
		return x.DisputantOrganizationId
	}
	return ""
}

func (x *ProvenanceDispute) GetDisputantOrganizationName() string {
	if x != nil {
		return x.DisputantOrganizationName
	}
	return ""
}

func (x *ProvenanceDispute) GetReason() ProvenanceDisputeReason {
	if x != nil {
		return x.Reason
	}
	return ProvenanceDisputeReason_PROVENANCE_DISPUTE_REASON_UNSPECIFIED
}

func (x *ProvenanceDispute) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ProvenanceDispute) GetEvidenceUrls() []string {
	if x != nil {
		return x.EvidenceUrls
	}
	return nil
}

func (x *ProvenanceDispute) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ProvenanceDispute) GetResolution() string {
	if x != nil {
		return x.Resolution
	}
	return ""
}

func (x *ProvenanceDispute) GetResolverId() string {
	if x != nil {
		return x.ResolverId
	}
	return ""
}

func (x *ProvenanceDispute) GetResolverName() string {
	if x != nil {
		return x.ResolverName
	}
	return ""
}

func (x *ProvenanceDispute) GetDisputedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DisputedAt
	}
	return nil
}

func (x *ProvenanceDispute) GetResolvedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ResolvedAt
	}
	return nil
}

// ProvenanceCertification represents a certification related to provenance
type ProvenanceCertification struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Id                string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	EntityId          string                 `protobuf:"bytes,2,opt,name=entity_id,proto3" json:"entity_id,omitempty"`
	EntityType        string                 `protobuf:"bytes,3,opt,name=entity_type,proto3" json:"entity_type,omitempty"`
	CertificationType string                 `protobuf:"bytes,4,opt,name=certification_type,proto3" json:"certification_type,omitempty"`
	CertificationName string                 `protobuf:"bytes,5,opt,name=certification_name,proto3" json:"certification_name,omitempty"`
	IssuerId          string                 `protobuf:"bytes,6,opt,name=issuer_id,proto3" json:"issuer_id,omitempty"`
	IssuerName        string                 `protobuf:"bytes,7,opt,name=issuer_name,proto3" json:"issuer_name,omitempty"`
	CertificateUrl    string                 `protobuf:"bytes,8,opt,name=certificate_url,proto3" json:"certificate_url,omitempty"`
	CertificateId     string                 `protobuf:"bytes,9,opt,name=certificate_id,proto3" json:"certificate_id,omitempty"`
	IssuedAt          *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=issued_at,proto3" json:"issued_at,omitempty"`
	ValidUntil        *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=valid_until,proto3" json:"valid_until,omitempty"`
	IsVerified        bool                   `protobuf:"varint,12,opt,name=is_verified,proto3" json:"is_verified,omitempty"`
	VerifierId        string                 `protobuf:"bytes,13,opt,name=verifier_id,proto3" json:"verifier_id,omitempty"`
	VerifierName      string                 `protobuf:"bytes,14,opt,name=verifier_name,proto3" json:"verifier_name,omitempty"`
	VerifiedAt        *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=verified_at,proto3" json:"verified_at,omitempty"`
	Metadata          map[string]string      `protobuf:"bytes,16,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ProvenanceCertification) Reset() {
	*x = ProvenanceCertification{}
	mi := &file_proto_scg_provenance_v1_models_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProvenanceCertification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvenanceCertification) ProtoMessage() {}

func (x *ProvenanceCertification) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scg_provenance_v1_models_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvenanceCertification.ProtoReflect.Descriptor instead.
func (*ProvenanceCertification) Descriptor() ([]byte, []int) {
	return file_proto_scg_provenance_v1_models_proto_rawDescGZIP(), []int{3}
}

func (x *ProvenanceCertification) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProvenanceCertification) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

func (x *ProvenanceCertification) GetEntityType() string {
	if x != nil {
		return x.EntityType
	}
	return ""
}

func (x *ProvenanceCertification) GetCertificationType() string {
	if x != nil {
		return x.CertificationType
	}
	return ""
}

func (x *ProvenanceCertification) GetCertificationName() string {
	if x != nil {
		return x.CertificationName
	}
	return ""
}

func (x *ProvenanceCertification) GetIssuerId() string {
	if x != nil {
		return x.IssuerId
	}
	return ""
}

func (x *ProvenanceCertification) GetIssuerName() string {
	if x != nil {
		return x.IssuerName
	}
	return ""
}

func (x *ProvenanceCertification) GetCertificateUrl() string {
	if x != nil {
		return x.CertificateUrl
	}
	return ""
}

func (x *ProvenanceCertification) GetCertificateId() string {
	if x != nil {
		return x.CertificateId
	}
	return ""
}

func (x *ProvenanceCertification) GetIssuedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.IssuedAt
	}
	return nil
}

func (x *ProvenanceCertification) GetValidUntil() *timestamppb.Timestamp {
	if x != nil {
		return x.ValidUntil
	}
	return nil
}

func (x *ProvenanceCertification) GetIsVerified() bool {
	if x != nil {
		return x.IsVerified
	}
	return false
}

func (x *ProvenanceCertification) GetVerifierId() string {
	if x != nil {
		return x.VerifierId
	}
	return ""
}

func (x *ProvenanceCertification) GetVerifierName() string {
	if x != nil {
		return x.VerifierName
	}
	return ""
}

func (x *ProvenanceCertification) GetVerifiedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.VerifiedAt
	}
	return nil
}

func (x *ProvenanceCertification) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

var File_proto_scg_provenance_v1_models_proto protoreflect.FileDescriptor

const file_proto_scg_provenance_v1_models_proto_rawDesc = "" +
	"\n" +
	"$proto/scg/provenance/v1/models.proto\x12(proto.scg.notification.provenance.models\x1a#proto/scg/provenance/v1/enums.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1cgoogle/protobuf/struct.proto\"\xe7\t\n" +
	"\x10ProvenanceRecord\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1c\n" +
	"\tentity_id\x18\x02 \x01(\tR\tentity_id\x12 \n" +
	"\ventity_type\x18\x03 \x01(\tR\ventity_type\x12_\n" +
	"\vrecord_type\x18\x04 \x01(\x0e2=.proto.scg.notification.provenance.enums.ProvenanceRecordTypeR\vrecord_type\x12W\n" +
	"\x06status\x18\x05 \x01(\x0e2?.proto.scg.notification.provenance.enums.ProvenanceRecordStatusR\x06status\x12\x1a\n" +
	"\blocation\x18\x06 \x01(\tR\blocation\x12\x1a\n" +
	"\bactor_id\x18\a \x01(\tR\bactor_id\x12\x1e\n" +
	"\n" +
	"actor_name\x18\b \x01(\tR\n" +
	"actor_name\x12(\n" +
	"\x0forganization_id\x18\t \x01(\tR\x0forganization_id\x12,\n" +
	"\x11organization_name\x18\n" +
	" \x01(\tR\x11organization_name\x12 \n" +
	"\vdescription\x18\v \x01(\tR\vdescription\x12+\n" +
	"\x04data\x18\f \x01(\v2\x17.google.protobuf.StructR\x04data\x12$\n" +
	"\revidence_urls\x18\r \x03(\tR\revidence_urls\x12w\n" +
	"\x13verification_method\x18\x0e \x01(\x0e2E.proto.scg.notification.provenance.enums.ProvenanceVerificationMethodR\x13verification_method\x12 \n" +
	"\vverifier_id\x18\x0f \x01(\tR\vverifier_id\x12$\n" +
	"\rverifier_name\x18\x10 \x01(\tR\rverifier_name\x12<\n" +
	"\vverified_at\x18\x11 \x01(\v2\x1a.google.protobuf.TimestampR\vverified_at\x12.\n" +
	"\x12verification_notes\x18\x12 \x01(\tR\x12verification_notes\x12<\n" +
	"\voccurred_at\x18\x13 \x01(\v2\x1a.google.protobuf.TimestampR\voccurred_at\x12<\n" +
	"\vrecorded_at\x18\x14 \x01(\v2\x1a.google.protobuf.TimestampR\vrecorded_at\x12.\n" +
	"\x12previous_record_id\x18\x15 \x01(\tR\x12previous_record_id\x12&\n" +
	"\x0enext_record_id\x18\x16 \x01(\tR\x0enext_record_id\x12d\n" +
	"\bmetadata\x18\x17 \x03(\v2H.proto.scg.notification.provenance.models.ProvenanceRecord.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe9\x03\n" +
	"\x0fProvenanceChain\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1c\n" +
	"\tentity_id\x18\x02 \x01(\tR\tentity_id\x12 \n" +
	"\ventity_type\x18\x03 \x01(\tR\ventity_type\x12\x1e\n" +
	"\n" +
	"record_ids\x18\x04 \x03(\tR\n" +
	"record_ids\x12 \n" +
	"\vis_complete\x18\x05 \x01(\bR\vis_complete\x12 \n" +
	"\vis_verified\x18\x06 \x01(\bR\vis_verified\x12:\n" +
	"\n" +
	"created_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"created_at\x12D\n" +
	"\x0flast_updated_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\x0flast_updated_at\x12c\n" +
	"\bmetadata\x18\t \x03(\v2G.proto.scg.notification.provenance.models.ProvenanceChain.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x81\x06\n" +
	"\x11ProvenanceDispute\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x122\n" +
	"\x14provenance_record_id\x18\x02 \x01(\tR\x14provenance_record_id\x12\x1c\n" +
	"\tentity_id\x18\x03 \x01(\tR\tentity_id\x12 \n" +
	"\ventity_type\x18\x04 \x01(\tR\ventity_type\x12\"\n" +
	"\fdisputant_id\x18\x05 \x01(\tR\fdisputant_id\x12&\n" +
	"\x0edisputant_name\x18\x06 \x01(\tR\x0edisputant_name\x12<\n" +
	"\x19disputant_organization_id\x18\a \x01(\tR\x19disputant_organization_id\x12@\n" +
	"\x1bdisputant_organization_name\x18\b \x01(\tR\x1bdisputant_organization_name\x12X\n" +
	"\x06reason\x18\t \x01(\x0e2@.proto.scg.notification.provenance.enums.ProvenanceDisputeReasonR\x06reason\x12 \n" +
	"\vdescription\x18\n" +
	" \x01(\tR\vdescription\x12$\n" +
	"\revidence_urls\x18\v \x03(\tR\revidence_urls\x12\x16\n" +
	"\x06status\x18\f \x01(\tR\x06status\x12\x1e\n" +
	"\n" +
	"resolution\x18\r \x01(\tR\n" +
	"resolution\x12 \n" +
	"\vresolver_id\x18\x0e \x01(\tR\vresolver_id\x12$\n" +
	"\rresolver_name\x18\x0f \x01(\tR\rresolver_name\x12<\n" +
	"\vdisputed_at\x18\x10 \x01(\v2\x1a.google.protobuf.TimestampR\vdisputed_at\x12<\n" +
	"\vresolved_at\x18\x11 \x01(\v2\x1a.google.protobuf.TimestampR\vresolved_at\"\xa5\x06\n" +
	"\x17ProvenanceCertification\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1c\n" +
	"\tentity_id\x18\x02 \x01(\tR\tentity_id\x12 \n" +
	"\ventity_type\x18\x03 \x01(\tR\ventity_type\x12.\n" +
	"\x12certification_type\x18\x04 \x01(\tR\x12certification_type\x12.\n" +
	"\x12certification_name\x18\x05 \x01(\tR\x12certification_name\x12\x1c\n" +
	"\tissuer_id\x18\x06 \x01(\tR\tissuer_id\x12 \n" +
	"\vissuer_name\x18\a \x01(\tR\vissuer_name\x12(\n" +
	"\x0fcertificate_url\x18\b \x01(\tR\x0fcertificate_url\x12&\n" +
	"\x0ecertificate_id\x18\t \x01(\tR\x0ecertificate_id\x128\n" +
	"\tissued_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tissued_at\x12<\n" +
	"\vvalid_until\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\vvalid_until\x12 \n" +
	"\vis_verified\x18\f \x01(\bR\vis_verified\x12 \n" +
	"\vverifier_id\x18\r \x01(\tR\vverifier_id\x12$\n" +
	"\rverifier_name\x18\x0e \x01(\tR\rverifier_name\x12<\n" +
	"\vverified_at\x18\x0f \x01(\v2\x1a.google.protobuf.TimestampR\vverified_at\x12k\n" +
	"\bmetadata\x18\x10 \x03(\v2O.proto.scg.notification.provenance.models.ProvenanceCertification.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B^Z\\github.com/next-trace/scg-notification-contracts/gen/go/proto/scg/provenance/v1;provenancev1b\x06proto3"

var (
	file_proto_scg_provenance_v1_models_proto_rawDescOnce sync.Once
	file_proto_scg_provenance_v1_models_proto_rawDescData []byte
)

func file_proto_scg_provenance_v1_models_proto_rawDescGZIP() []byte {
	file_proto_scg_provenance_v1_models_proto_rawDescOnce.Do(func() {
		file_proto_scg_provenance_v1_models_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_scg_provenance_v1_models_proto_rawDesc), len(file_proto_scg_provenance_v1_models_proto_rawDesc)))
	})
	return file_proto_scg_provenance_v1_models_proto_rawDescData
}

var file_proto_scg_provenance_v1_models_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_proto_scg_provenance_v1_models_proto_goTypes = []any{
	(*ProvenanceRecord)(nil),          // 0: proto.scg.notification.provenance.models.ProvenanceRecord
	(*ProvenanceChain)(nil),           // 1: proto.scg.notification.provenance.models.ProvenanceChain
	(*ProvenanceDispute)(nil),         // 2: proto.scg.notification.provenance.models.ProvenanceDispute
	(*ProvenanceCertification)(nil),   // 3: proto.scg.notification.provenance.models.ProvenanceCertification
	nil,                               // 4: proto.scg.notification.provenance.models.ProvenanceRecord.MetadataEntry
	nil,                               // 5: proto.scg.notification.provenance.models.ProvenanceChain.MetadataEntry
	nil,                               // 6: proto.scg.notification.provenance.models.ProvenanceCertification.MetadataEntry
	(ProvenanceRecordType)(0),         // 7: proto.scg.notification.provenance.enums.ProvenanceRecordType
	(ProvenanceRecordStatus)(0),       // 8: proto.scg.notification.provenance.enums.ProvenanceRecordStatus
	(*structpb.Struct)(nil),           // 9: google.protobuf.Struct
	(ProvenanceVerificationMethod)(0), // 10: proto.scg.notification.provenance.enums.ProvenanceVerificationMethod
	(*timestamppb.Timestamp)(nil),     // 11: google.protobuf.Timestamp
	(ProvenanceDisputeReason)(0),      // 12: proto.scg.notification.provenance.enums.ProvenanceDisputeReason
}
var file_proto_scg_provenance_v1_models_proto_depIdxs = []int32{
	7,  // 0: proto.scg.notification.provenance.models.ProvenanceRecord.record_type:type_name -> proto.scg.notification.provenance.enums.ProvenanceRecordType
	8,  // 1: proto.scg.notification.provenance.models.ProvenanceRecord.status:type_name -> proto.scg.notification.provenance.enums.ProvenanceRecordStatus
	9,  // 2: proto.scg.notification.provenance.models.ProvenanceRecord.data:type_name -> google.protobuf.Struct
	10, // 3: proto.scg.notification.provenance.models.ProvenanceRecord.verification_method:type_name -> proto.scg.notification.provenance.enums.ProvenanceVerificationMethod
	11, // 4: proto.scg.notification.provenance.models.ProvenanceRecord.verified_at:type_name -> google.protobuf.Timestamp
	11, // 5: proto.scg.notification.provenance.models.ProvenanceRecord.occurred_at:type_name -> google.protobuf.Timestamp
	11, // 6: proto.scg.notification.provenance.models.ProvenanceRecord.recorded_at:type_name -> google.protobuf.Timestamp
	4,  // 7: proto.scg.notification.provenance.models.ProvenanceRecord.metadata:type_name -> proto.scg.notification.provenance.models.ProvenanceRecord.MetadataEntry
	11, // 8: proto.scg.notification.provenance.models.ProvenanceChain.created_at:type_name -> google.protobuf.Timestamp
	11, // 9: proto.scg.notification.provenance.models.ProvenanceChain.last_updated_at:type_name -> google.protobuf.Timestamp
	5,  // 10: proto.scg.notification.provenance.models.ProvenanceChain.metadata:type_name -> proto.scg.notification.provenance.models.ProvenanceChain.MetadataEntry
	12, // 11: proto.scg.notification.provenance.models.ProvenanceDispute.reason:type_name -> proto.scg.notification.provenance.enums.ProvenanceDisputeReason
	11, // 12: proto.scg.notification.provenance.models.ProvenanceDispute.disputed_at:type_name -> google.protobuf.Timestamp
	11, // 13: proto.scg.notification.provenance.models.ProvenanceDispute.resolved_at:type_name -> google.protobuf.Timestamp
	11, // 14: proto.scg.notification.provenance.models.ProvenanceCertification.issued_at:type_name -> google.protobuf.Timestamp
	11, // 15: proto.scg.notification.provenance.models.ProvenanceCertification.valid_until:type_name -> google.protobuf.Timestamp
	11, // 16: proto.scg.notification.provenance.models.ProvenanceCertification.verified_at:type_name -> google.protobuf.Timestamp
	6,  // 17: proto.scg.notification.provenance.models.ProvenanceCertification.metadata:type_name -> proto.scg.notification.provenance.models.ProvenanceCertification.MetadataEntry
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_proto_scg_provenance_v1_models_proto_init() }
func file_proto_scg_provenance_v1_models_proto_init() {
	if File_proto_scg_provenance_v1_models_proto != nil {
		return
	}
	file_proto_scg_provenance_v1_enums_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_scg_provenance_v1_models_proto_rawDesc), len(file_proto_scg_provenance_v1_models_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_scg_provenance_v1_models_proto_goTypes,
		DependencyIndexes: file_proto_scg_provenance_v1_models_proto_depIdxs,
		MessageInfos:      file_proto_scg_provenance_v1_models_proto_msgTypes,
	}.Build()
	File_proto_scg_provenance_v1_models_proto = out.File
	file_proto_scg_provenance_v1_models_proto_goTypes = nil
	file_proto_scg_provenance_v1_models_proto_depIdxs = nil
}
