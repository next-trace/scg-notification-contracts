// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: proto/scg/partner/v1/events.proto

package partnerv1

import (
	v1 "github.com/next-trace/scg-notification-contracts/gen/go/proto/scg/shared/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PartnerCreatedNotification is sent when a new partner is created
type PartnerCreatedNotification struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Base                *v1.NotificationEvent  `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	PartnerId           string                 `protobuf:"bytes,2,opt,name=partner_id,proto3" json:"partner_id,omitempty"`
	PartnerName         string                 `protobuf:"bytes,3,opt,name=partner_name,proto3" json:"partner_name,omitempty"`
	PartnerLegalName    string                 `protobuf:"bytes,4,opt,name=partner_legal_name,proto3" json:"partner_legal_name,omitempty"`
	PartnerType         PartnerType            `protobuf:"varint,5,opt,name=partner_type,proto3,enum=proto.scg.notification.partner.enums.PartnerType" json:"partner_type,omitempty"`
	PrimaryContactName  string                 `protobuf:"bytes,6,opt,name=primary_contact_name,proto3" json:"primary_contact_name,omitempty"`
	PrimaryContactEmail string                 `protobuf:"bytes,7,opt,name=primary_contact_email,proto3" json:"primary_contact_email,omitempty"`
	CreatedById         string                 `protobuf:"bytes,8,opt,name=created_by_id,proto3" json:"created_by_id,omitempty"`
	CreatedByName       string                 `protobuf:"bytes,9,opt,name=created_by_name,proto3" json:"created_by_name,omitempty"`
	CreatedAt           *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=created_at,proto3" json:"created_at,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *PartnerCreatedNotification) Reset() {
	*x = PartnerCreatedNotification{}
	mi := &file_proto_scg_partner_v1_events_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartnerCreatedNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartnerCreatedNotification) ProtoMessage() {}

func (x *PartnerCreatedNotification) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scg_partner_v1_events_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartnerCreatedNotification.ProtoReflect.Descriptor instead.
func (*PartnerCreatedNotification) Descriptor() ([]byte, []int) {
	return file_proto_scg_partner_v1_events_proto_rawDescGZIP(), []int{0}
}

func (x *PartnerCreatedNotification) GetBase() *v1.NotificationEvent {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *PartnerCreatedNotification) GetPartnerId() string {
	if x != nil {
		return x.PartnerId
	}
	return ""
}

func (x *PartnerCreatedNotification) GetPartnerName() string {
	if x != nil {
		return x.PartnerName
	}
	return ""
}

func (x *PartnerCreatedNotification) GetPartnerLegalName() string {
	if x != nil {
		return x.PartnerLegalName
	}
	return ""
}

func (x *PartnerCreatedNotification) GetPartnerType() PartnerType {
	if x != nil {
		return x.PartnerType
	}
	return PartnerType_PARTNER_TYPE_UNSPECIFIED
}

func (x *PartnerCreatedNotification) GetPrimaryContactName() string {
	if x != nil {
		return x.PrimaryContactName
	}
	return ""
}

func (x *PartnerCreatedNotification) GetPrimaryContactEmail() string {
	if x != nil {
		return x.PrimaryContactEmail
	}
	return ""
}

func (x *PartnerCreatedNotification) GetCreatedById() string {
	if x != nil {
		return x.CreatedById
	}
	return ""
}

func (x *PartnerCreatedNotification) GetCreatedByName() string {
	if x != nil {
		return x.CreatedByName
	}
	return ""
}

func (x *PartnerCreatedNotification) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

// PartnerStatusChangedNotification is sent when a partner's status changes
type PartnerStatusChangedNotification struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Base            *v1.NotificationEvent  `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	PartnerId       string                 `protobuf:"bytes,2,opt,name=partner_id,proto3" json:"partner_id,omitempty"`
	PartnerName     string                 `protobuf:"bytes,3,opt,name=partner_name,proto3" json:"partner_name,omitempty"`
	PreviousStatus  PartnerStatus          `protobuf:"varint,4,opt,name=previous_status,proto3,enum=proto.scg.notification.partner.enums.PartnerStatus" json:"previous_status,omitempty"`
	NewStatus       PartnerStatus          `protobuf:"varint,5,opt,name=new_status,proto3,enum=proto.scg.notification.partner.enums.PartnerStatus" json:"new_status,omitempty"`
	Reason          string                 `protobuf:"bytes,6,opt,name=reason,proto3" json:"reason,omitempty"`
	ActorId         string                 `protobuf:"bytes,7,opt,name=actor_id,proto3" json:"actor_id,omitempty"`
	ActorName       string                 `protobuf:"bytes,8,opt,name=actor_name,proto3" json:"actor_name,omitempty"`
	StatusChangedAt *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=status_changed_at,proto3" json:"status_changed_at,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PartnerStatusChangedNotification) Reset() {
	*x = PartnerStatusChangedNotification{}
	mi := &file_proto_scg_partner_v1_events_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartnerStatusChangedNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartnerStatusChangedNotification) ProtoMessage() {}

func (x *PartnerStatusChangedNotification) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scg_partner_v1_events_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartnerStatusChangedNotification.ProtoReflect.Descriptor instead.
func (*PartnerStatusChangedNotification) Descriptor() ([]byte, []int) {
	return file_proto_scg_partner_v1_events_proto_rawDescGZIP(), []int{1}
}

func (x *PartnerStatusChangedNotification) GetBase() *v1.NotificationEvent {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *PartnerStatusChangedNotification) GetPartnerId() string {
	if x != nil {
		return x.PartnerId
	}
	return ""
}

func (x *PartnerStatusChangedNotification) GetPartnerName() string {
	if x != nil {
		return x.PartnerName
	}
	return ""
}

func (x *PartnerStatusChangedNotification) GetPreviousStatus() PartnerStatus {
	if x != nil {
		return x.PreviousStatus
	}
	return PartnerStatus_PARTNER_STATUS_UNSPECIFIED
}

func (x *PartnerStatusChangedNotification) GetNewStatus() PartnerStatus {
	if x != nil {
		return x.NewStatus
	}
	return PartnerStatus_PARTNER_STATUS_UNSPECIFIED
}

func (x *PartnerStatusChangedNotification) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *PartnerStatusChangedNotification) GetActorId() string {
	if x != nil {
		return x.ActorId
	}
	return ""
}

func (x *PartnerStatusChangedNotification) GetActorName() string {
	if x != nil {
		return x.ActorName
	}
	return ""
}

func (x *PartnerStatusChangedNotification) GetStatusChangedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StatusChangedAt
	}
	return nil
}

// PartnerVerificationStatusChangedNotification is sent when a partner's verification status changes
type PartnerVerificationStatusChangedNotification struct {
	state           protoimpl.MessageState    `protogen:"open.v1"`
	Base            *v1.NotificationEvent     `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	PartnerId       string                    `protobuf:"bytes,2,opt,name=partner_id,proto3" json:"partner_id,omitempty"`
	PartnerName     string                    `protobuf:"bytes,3,opt,name=partner_name,proto3" json:"partner_name,omitempty"`
	PreviousStatus  PartnerVerificationStatus `protobuf:"varint,4,opt,name=previous_status,proto3,enum=proto.scg.notification.partner.enums.PartnerVerificationStatus" json:"previous_status,omitempty"`
	NewStatus       PartnerVerificationStatus `protobuf:"varint,5,opt,name=new_status,proto3,enum=proto.scg.notification.partner.enums.PartnerVerificationStatus" json:"new_status,omitempty"`
	VerifierId      string                    `protobuf:"bytes,6,opt,name=verifier_id,proto3" json:"verifier_id,omitempty"`
	VerifierName    string                    `protobuf:"bytes,7,opt,name=verifier_name,proto3" json:"verifier_name,omitempty"`
	Notes           string                    `protobuf:"bytes,8,opt,name=notes,proto3" json:"notes,omitempty"`
	StatusChangedAt *timestamppb.Timestamp    `protobuf:"bytes,9,opt,name=status_changed_at,proto3" json:"status_changed_at,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PartnerVerificationStatusChangedNotification) Reset() {
	*x = PartnerVerificationStatusChangedNotification{}
	mi := &file_proto_scg_partner_v1_events_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartnerVerificationStatusChangedNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartnerVerificationStatusChangedNotification) ProtoMessage() {}

func (x *PartnerVerificationStatusChangedNotification) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scg_partner_v1_events_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartnerVerificationStatusChangedNotification.ProtoReflect.Descriptor instead.
func (*PartnerVerificationStatusChangedNotification) Descriptor() ([]byte, []int) {
	return file_proto_scg_partner_v1_events_proto_rawDescGZIP(), []int{2}
}

func (x *PartnerVerificationStatusChangedNotification) GetBase() *v1.NotificationEvent {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *PartnerVerificationStatusChangedNotification) GetPartnerId() string {
	if x != nil {
		return x.PartnerId
	}
	return ""
}

func (x *PartnerVerificationStatusChangedNotification) GetPartnerName() string {
	if x != nil {
		return x.PartnerName
	}
	return ""
}

func (x *PartnerVerificationStatusChangedNotification) GetPreviousStatus() PartnerVerificationStatus {
	if x != nil {
		return x.PreviousStatus
	}
	return PartnerVerificationStatus_PARTNER_VERIFICATION_STATUS_UNSPECIFIED
}

func (x *PartnerVerificationStatusChangedNotification) GetNewStatus() PartnerVerificationStatus {
	if x != nil {
		return x.NewStatus
	}
	return PartnerVerificationStatus_PARTNER_VERIFICATION_STATUS_UNSPECIFIED
}

func (x *PartnerVerificationStatusChangedNotification) GetVerifierId() string {
	if x != nil {
		return x.VerifierId
	}
	return ""
}

func (x *PartnerVerificationStatusChangedNotification) GetVerifierName() string {
	if x != nil {
		return x.VerifierName
	}
	return ""
}

func (x *PartnerVerificationStatusChangedNotification) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *PartnerVerificationStatusChangedNotification) GetStatusChangedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StatusChangedAt
	}
	return nil
}

// PartnerAgreementCreatedNotification is sent when a new partner agreement is created
type PartnerAgreementCreatedNotification struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Base           *v1.NotificationEvent  `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	AgreementId    string                 `protobuf:"bytes,2,opt,name=agreement_id,proto3" json:"agreement_id,omitempty"`
	PartnerId      string                 `protobuf:"bytes,3,opt,name=partner_id,proto3" json:"partner_id,omitempty"`
	PartnerName    string                 `protobuf:"bytes,4,opt,name=partner_name,proto3" json:"partner_name,omitempty"`
	AgreementType  string                 `protobuf:"bytes,5,opt,name=agreement_type,proto3" json:"agreement_type,omitempty"`
	AgreementName  string                 `protobuf:"bytes,6,opt,name=agreement_name,proto3" json:"agreement_name,omitempty"`
	EffectiveDate  *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=effective_date,proto3" json:"effective_date,omitempty"`
	ExpirationDate *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=expiration_date,proto3" json:"expiration_date,omitempty"`
	CreatedById    string                 `protobuf:"bytes,9,opt,name=created_by_id,proto3" json:"created_by_id,omitempty"`
	CreatedByName  string                 `protobuf:"bytes,10,opt,name=created_by_name,proto3" json:"created_by_name,omitempty"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created_at,proto3" json:"created_at,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PartnerAgreementCreatedNotification) Reset() {
	*x = PartnerAgreementCreatedNotification{}
	mi := &file_proto_scg_partner_v1_events_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartnerAgreementCreatedNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartnerAgreementCreatedNotification) ProtoMessage() {}

func (x *PartnerAgreementCreatedNotification) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scg_partner_v1_events_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartnerAgreementCreatedNotification.ProtoReflect.Descriptor instead.
func (*PartnerAgreementCreatedNotification) Descriptor() ([]byte, []int) {
	return file_proto_scg_partner_v1_events_proto_rawDescGZIP(), []int{3}
}

func (x *PartnerAgreementCreatedNotification) GetBase() *v1.NotificationEvent {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *PartnerAgreementCreatedNotification) GetAgreementId() string {
	if x != nil {
		return x.AgreementId
	}
	return ""
}

func (x *PartnerAgreementCreatedNotification) GetPartnerId() string {
	if x != nil {
		return x.PartnerId
	}
	return ""
}

func (x *PartnerAgreementCreatedNotification) GetPartnerName() string {
	if x != nil {
		return x.PartnerName
	}
	return ""
}

func (x *PartnerAgreementCreatedNotification) GetAgreementType() string {
	if x != nil {
		return x.AgreementType
	}
	return ""
}

func (x *PartnerAgreementCreatedNotification) GetAgreementName() string {
	if x != nil {
		return x.AgreementName
	}
	return ""
}

func (x *PartnerAgreementCreatedNotification) GetEffectiveDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EffectiveDate
	}
	return nil
}

func (x *PartnerAgreementCreatedNotification) GetExpirationDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpirationDate
	}
	return nil
}

func (x *PartnerAgreementCreatedNotification) GetCreatedById() string {
	if x != nil {
		return x.CreatedById
	}
	return ""
}

func (x *PartnerAgreementCreatedNotification) GetCreatedByName() string {
	if x != nil {
		return x.CreatedByName
	}
	return ""
}

func (x *PartnerAgreementCreatedNotification) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

// PartnerAgreementSignedNotification is sent when a partner agreement is signed
type PartnerAgreementSignedNotification struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Base             *v1.NotificationEvent  `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	AgreementId      string                 `protobuf:"bytes,2,opt,name=agreement_id,proto3" json:"agreement_id,omitempty"`
	PartnerId        string                 `protobuf:"bytes,3,opt,name=partner_id,proto3" json:"partner_id,omitempty"`
	PartnerName      string                 `protobuf:"bytes,4,opt,name=partner_name,proto3" json:"partner_name,omitempty"`
	AgreementType    string                 `protobuf:"bytes,5,opt,name=agreement_type,proto3" json:"agreement_type,omitempty"`
	AgreementName    string                 `protobuf:"bytes,6,opt,name=agreement_name,proto3" json:"agreement_name,omitempty"`
	SignedById       string                 `protobuf:"bytes,7,opt,name=signed_by_id,proto3" json:"signed_by_id,omitempty"`
	SignedByName     string                 `protobuf:"bytes,8,opt,name=signed_by_name,proto3" json:"signed_by_name,omitempty"`
	SignedOnBehalfOf string                 `protobuf:"bytes,9,opt,name=signed_on_behalf_of,proto3" json:"signed_on_behalf_of,omitempty"`
	SignedAt         *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=signed_at,proto3" json:"signed_at,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *PartnerAgreementSignedNotification) Reset() {
	*x = PartnerAgreementSignedNotification{}
	mi := &file_proto_scg_partner_v1_events_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartnerAgreementSignedNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartnerAgreementSignedNotification) ProtoMessage() {}

func (x *PartnerAgreementSignedNotification) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scg_partner_v1_events_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartnerAgreementSignedNotification.ProtoReflect.Descriptor instead.
func (*PartnerAgreementSignedNotification) Descriptor() ([]byte, []int) {
	return file_proto_scg_partner_v1_events_proto_rawDescGZIP(), []int{4}
}

func (x *PartnerAgreementSignedNotification) GetBase() *v1.NotificationEvent {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *PartnerAgreementSignedNotification) GetAgreementId() string {
	if x != nil {
		return x.AgreementId
	}
	return ""
}

func (x *PartnerAgreementSignedNotification) GetPartnerId() string {
	if x != nil {
		return x.PartnerId
	}
	return ""
}

func (x *PartnerAgreementSignedNotification) GetPartnerName() string {
	if x != nil {
		return x.PartnerName
	}
	return ""
}

func (x *PartnerAgreementSignedNotification) GetAgreementType() string {
	if x != nil {
		return x.AgreementType
	}
	return ""
}

func (x *PartnerAgreementSignedNotification) GetAgreementName() string {
	if x != nil {
		return x.AgreementName
	}
	return ""
}

func (x *PartnerAgreementSignedNotification) GetSignedById() string {
	if x != nil {
		return x.SignedById
	}
	return ""
}

func (x *PartnerAgreementSignedNotification) GetSignedByName() string {
	if x != nil {
		return x.SignedByName
	}
	return ""
}

func (x *PartnerAgreementSignedNotification) GetSignedOnBehalfOf() string {
	if x != nil {
		return x.SignedOnBehalfOf
	}
	return ""
}

func (x *PartnerAgreementSignedNotification) GetSignedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.SignedAt
	}
	return nil
}

// PartnerAgreementExpiringNotification is sent when a partner agreement is about to expire
type PartnerAgreementExpiringNotification struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Base                *v1.NotificationEvent  `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	AgreementId         string                 `protobuf:"bytes,2,opt,name=agreement_id,proto3" json:"agreement_id,omitempty"`
	PartnerId           string                 `protobuf:"bytes,3,opt,name=partner_id,proto3" json:"partner_id,omitempty"`
	PartnerName         string                 `protobuf:"bytes,4,opt,name=partner_name,proto3" json:"partner_name,omitempty"`
	AgreementType       string                 `protobuf:"bytes,5,opt,name=agreement_type,proto3" json:"agreement_type,omitempty"`
	AgreementName       string                 `protobuf:"bytes,6,opt,name=agreement_name,proto3" json:"agreement_name,omitempty"`
	ExpirationDate      *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=expiration_date,proto3" json:"expiration_date,omitempty"`
	DaysUntilExpiration int32                  `protobuf:"varint,8,opt,name=days_until_expiration,proto3" json:"days_until_expiration,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *PartnerAgreementExpiringNotification) Reset() {
	*x = PartnerAgreementExpiringNotification{}
	mi := &file_proto_scg_partner_v1_events_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartnerAgreementExpiringNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartnerAgreementExpiringNotification) ProtoMessage() {}

func (x *PartnerAgreementExpiringNotification) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scg_partner_v1_events_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartnerAgreementExpiringNotification.ProtoReflect.Descriptor instead.
func (*PartnerAgreementExpiringNotification) Descriptor() ([]byte, []int) {
	return file_proto_scg_partner_v1_events_proto_rawDescGZIP(), []int{5}
}

func (x *PartnerAgreementExpiringNotification) GetBase() *v1.NotificationEvent {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *PartnerAgreementExpiringNotification) GetAgreementId() string {
	if x != nil {
		return x.AgreementId
	}
	return ""
}

func (x *PartnerAgreementExpiringNotification) GetPartnerId() string {
	if x != nil {
		return x.PartnerId
	}
	return ""
}

func (x *PartnerAgreementExpiringNotification) GetPartnerName() string {
	if x != nil {
		return x.PartnerName
	}
	return ""
}

func (x *PartnerAgreementExpiringNotification) GetAgreementType() string {
	if x != nil {
		return x.AgreementType
	}
	return ""
}

func (x *PartnerAgreementExpiringNotification) GetAgreementName() string {
	if x != nil {
		return x.AgreementName
	}
	return ""
}

func (x *PartnerAgreementExpiringNotification) GetExpirationDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpirationDate
	}
	return nil
}

func (x *PartnerAgreementExpiringNotification) GetDaysUntilExpiration() int32 {
	if x != nil {
		return x.DaysUntilExpiration
	}
	return 0
}

var File_proto_scg_partner_v1_events_proto protoreflect.FileDescriptor

const file_proto_scg_partner_v1_events_proto_rawDesc = "" +
	"\n" +
	"!proto/scg/partner/v1/events.proto\x12%proto.scg.notification.partner.events\x1a proto/scg/shared/v1/events.proto\x1a proto/scg/partner/v1/enums.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xaa\x04\n" +
	"\x1aPartnerCreatedNotification\x12K\n" +
	"\x04base\x18\x01 \x01(\v27.proto.scg.notification.shared.events.NotificationEventR\x04base\x12\x1e\n" +
	"\n" +
	"partner_id\x18\x02 \x01(\tR\n" +
	"partner_id\x12\"\n" +
	"\fpartner_name\x18\x03 \x01(\tR\fpartner_name\x12.\n" +
	"\x12partner_legal_name\x18\x04 \x01(\tR\x12partner_legal_name\x12U\n" +
	"\fpartner_type\x18\x05 \x01(\x0e21.proto.scg.notification.partner.enums.PartnerTypeR\fpartner_type\x122\n" +
	"\x14primary_contact_name\x18\x06 \x01(\tR\x14primary_contact_name\x124\n" +
	"\x15primary_contact_email\x18\a \x01(\tR\x15primary_contact_email\x12$\n" +
	"\rcreated_by_id\x18\b \x01(\tR\rcreated_by_id\x12(\n" +
	"\x0fcreated_by_name\x18\t \x01(\tR\x0fcreated_by_name\x12:\n" +
	"\n" +
	"created_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"created_at\"\x85\x04\n" +
	" PartnerStatusChangedNotification\x12K\n" +
	"\x04base\x18\x01 \x01(\v27.proto.scg.notification.shared.events.NotificationEventR\x04base\x12\x1e\n" +
	"\n" +
	"partner_id\x18\x02 \x01(\tR\n" +
	"partner_id\x12\"\n" +
	"\fpartner_name\x18\x03 \x01(\tR\fpartner_name\x12]\n" +
	"\x0fprevious_status\x18\x04 \x01(\x0e23.proto.scg.notification.partner.enums.PartnerStatusR\x0fprevious_status\x12S\n" +
	"\n" +
	"new_status\x18\x05 \x01(\x0e23.proto.scg.notification.partner.enums.PartnerStatusR\n" +
	"new_status\x12\x16\n" +
	"\x06reason\x18\x06 \x01(\tR\x06reason\x12\x1a\n" +
	"\bactor_id\x18\a \x01(\tR\bactor_id\x12\x1e\n" +
	"\n" +
	"actor_name\x18\b \x01(\tR\n" +
	"actor_name\x12H\n" +
	"\x11status_changed_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\x11status_changed_at\"\xb3\x04\n" +
	",PartnerVerificationStatusChangedNotification\x12K\n" +
	"\x04base\x18\x01 \x01(\v27.proto.scg.notification.shared.events.NotificationEventR\x04base\x12\x1e\n" +
	"\n" +
	"partner_id\x18\x02 \x01(\tR\n" +
	"partner_id\x12\"\n" +
	"\fpartner_name\x18\x03 \x01(\tR\fpartner_name\x12i\n" +
	"\x0fprevious_status\x18\x04 \x01(\x0e2?.proto.scg.notification.partner.enums.PartnerVerificationStatusR\x0fprevious_status\x12_\n" +
	"\n" +
	"new_status\x18\x05 \x01(\x0e2?.proto.scg.notification.partner.enums.PartnerVerificationStatusR\n" +
	"new_status\x12 \n" +
	"\vverifier_id\x18\x06 \x01(\tR\vverifier_id\x12$\n" +
	"\rverifier_name\x18\a \x01(\tR\rverifier_name\x12\x14\n" +
	"\x05notes\x18\b \x01(\tR\x05notes\x12H\n" +
	"\x11status_changed_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\x11status_changed_at\"\xc0\x04\n" +
	"#PartnerAgreementCreatedNotification\x12K\n" +
	"\x04base\x18\x01 \x01(\v27.proto.scg.notification.shared.events.NotificationEventR\x04base\x12\"\n" +
	"\fagreement_id\x18\x02 \x01(\tR\fagreement_id\x12\x1e\n" +
	"\n" +
	"partner_id\x18\x03 \x01(\tR\n" +
	"partner_id\x12\"\n" +
	"\fpartner_name\x18\x04 \x01(\tR\fpartner_name\x12&\n" +
	"\x0eagreement_type\x18\x05 \x01(\tR\x0eagreement_type\x12&\n" +
	"\x0eagreement_name\x18\x06 \x01(\tR\x0eagreement_name\x12B\n" +
	"\x0eeffective_date\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\x0eeffective_date\x12D\n" +
	"\x0fexpiration_date\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\x0fexpiration_date\x12$\n" +
	"\rcreated_by_id\x18\t \x01(\tR\rcreated_by_id\x12(\n" +
	"\x0fcreated_by_name\x18\n" +
	" \x01(\tR\x0fcreated_by_name\x12:\n" +
	"\n" +
	"created_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"created_at\"\xe1\x03\n" +
	"\"PartnerAgreementSignedNotification\x12K\n" +
	"\x04base\x18\x01 \x01(\v27.proto.scg.notification.shared.events.NotificationEventR\x04base\x12\"\n" +
	"\fagreement_id\x18\x02 \x01(\tR\fagreement_id\x12\x1e\n" +
	"\n" +
	"partner_id\x18\x03 \x01(\tR\n" +
	"partner_id\x12\"\n" +
	"\fpartner_name\x18\x04 \x01(\tR\fpartner_name\x12&\n" +
	"\x0eagreement_type\x18\x05 \x01(\tR\x0eagreement_type\x12&\n" +
	"\x0eagreement_name\x18\x06 \x01(\tR\x0eagreement_name\x12\"\n" +
	"\fsigned_by_id\x18\a \x01(\tR\fsigned_by_id\x12&\n" +
	"\x0esigned_by_name\x18\b \x01(\tR\x0esigned_by_name\x120\n" +
	"\x13signed_on_behalf_of\x18\t \x01(\tR\x13signed_on_behalf_of\x128\n" +
	"\tsigned_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tsigned_at\"\xa7\x03\n" +
	"$PartnerAgreementExpiringNotification\x12K\n" +
	"\x04base\x18\x01 \x01(\v27.proto.scg.notification.shared.events.NotificationEventR\x04base\x12\"\n" +
	"\fagreement_id\x18\x02 \x01(\tR\fagreement_id\x12\x1e\n" +
	"\n" +
	"partner_id\x18\x03 \x01(\tR\n" +
	"partner_id\x12\"\n" +
	"\fpartner_name\x18\x04 \x01(\tR\fpartner_name\x12&\n" +
	"\x0eagreement_type\x18\x05 \x01(\tR\x0eagreement_type\x12&\n" +
	"\x0eagreement_name\x18\x06 \x01(\tR\x0eagreement_name\x12D\n" +
	"\x0fexpiration_date\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\x0fexpiration_date\x124\n" +
	"\x15days_until_expiration\x18\b \x01(\x05R\x15days_until_expirationBXZVgithub.com/next-trace/scg-notification-contracts/gen/go/proto/scg/partner/v1;partnerv1b\x06proto3"

var (
	file_proto_scg_partner_v1_events_proto_rawDescOnce sync.Once
	file_proto_scg_partner_v1_events_proto_rawDescData []byte
)

func file_proto_scg_partner_v1_events_proto_rawDescGZIP() []byte {
	file_proto_scg_partner_v1_events_proto_rawDescOnce.Do(func() {
		file_proto_scg_partner_v1_events_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_scg_partner_v1_events_proto_rawDesc), len(file_proto_scg_partner_v1_events_proto_rawDesc)))
	})
	return file_proto_scg_partner_v1_events_proto_rawDescData
}

var file_proto_scg_partner_v1_events_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_proto_scg_partner_v1_events_proto_goTypes = []any{
	(*PartnerCreatedNotification)(nil),                   // 0: proto.scg.notification.partner.events.PartnerCreatedNotification
	(*PartnerStatusChangedNotification)(nil),             // 1: proto.scg.notification.partner.events.PartnerStatusChangedNotification
	(*PartnerVerificationStatusChangedNotification)(nil), // 2: proto.scg.notification.partner.events.PartnerVerificationStatusChangedNotification
	(*PartnerAgreementCreatedNotification)(nil),          // 3: proto.scg.notification.partner.events.PartnerAgreementCreatedNotification
	(*PartnerAgreementSignedNotification)(nil),           // 4: proto.scg.notification.partner.events.PartnerAgreementSignedNotification
	(*PartnerAgreementExpiringNotification)(nil),         // 5: proto.scg.notification.partner.events.PartnerAgreementExpiringNotification
	(*v1.NotificationEvent)(nil),                         // 6: proto.scg.notification.shared.events.NotificationEvent
	(PartnerType)(0),                                     // 7: proto.scg.notification.partner.enums.PartnerType
	(*timestamppb.Timestamp)(nil),                        // 8: google.protobuf.Timestamp
	(PartnerStatus)(0),                                   // 9: proto.scg.notification.partner.enums.PartnerStatus
	(PartnerVerificationStatus)(0),                       // 10: proto.scg.notification.partner.enums.PartnerVerificationStatus
}
var file_proto_scg_partner_v1_events_proto_depIdxs = []int32{
	6,  // 0: proto.scg.notification.partner.events.PartnerCreatedNotification.base:type_name -> proto.scg.notification.shared.events.NotificationEvent
	7,  // 1: proto.scg.notification.partner.events.PartnerCreatedNotification.partner_type:type_name -> proto.scg.notification.partner.enums.PartnerType
	8,  // 2: proto.scg.notification.partner.events.PartnerCreatedNotification.created_at:type_name -> google.protobuf.Timestamp
	6,  // 3: proto.scg.notification.partner.events.PartnerStatusChangedNotification.base:type_name -> proto.scg.notification.shared.events.NotificationEvent
	9,  // 4: proto.scg.notification.partner.events.PartnerStatusChangedNotification.previous_status:type_name -> proto.scg.notification.partner.enums.PartnerStatus
	9,  // 5: proto.scg.notification.partner.events.PartnerStatusChangedNotification.new_status:type_name -> proto.scg.notification.partner.enums.PartnerStatus
	8,  // 6: proto.scg.notification.partner.events.PartnerStatusChangedNotification.status_changed_at:type_name -> google.protobuf.Timestamp
	6,  // 7: proto.scg.notification.partner.events.PartnerVerificationStatusChangedNotification.base:type_name -> proto.scg.notification.shared.events.NotificationEvent
	10, // 8: proto.scg.notification.partner.events.PartnerVerificationStatusChangedNotification.previous_status:type_name -> proto.scg.notification.partner.enums.PartnerVerificationStatus
	10, // 9: proto.scg.notification.partner.events.PartnerVerificationStatusChangedNotification.new_status:type_name -> proto.scg.notification.partner.enums.PartnerVerificationStatus
	8,  // 10: proto.scg.notification.partner.events.PartnerVerificationStatusChangedNotification.status_changed_at:type_name -> google.protobuf.Timestamp
	6,  // 11: proto.scg.notification.partner.events.PartnerAgreementCreatedNotification.base:type_name -> proto.scg.notification.shared.events.NotificationEvent
	8,  // 12: proto.scg.notification.partner.events.PartnerAgreementCreatedNotification.effective_date:type_name -> google.protobuf.Timestamp
	8,  // 13: proto.scg.notification.partner.events.PartnerAgreementCreatedNotification.expiration_date:type_name -> google.protobuf.Timestamp
	8,  // 14: proto.scg.notification.partner.events.PartnerAgreementCreatedNotification.created_at:type_name -> google.protobuf.Timestamp
	6,  // 15: proto.scg.notification.partner.events.PartnerAgreementSignedNotification.base:type_name -> proto.scg.notification.shared.events.NotificationEvent
	8,  // 16: proto.scg.notification.partner.events.PartnerAgreementSignedNotification.signed_at:type_name -> google.protobuf.Timestamp
	6,  // 17: proto.scg.notification.partner.events.PartnerAgreementExpiringNotification.base:type_name -> proto.scg.notification.shared.events.NotificationEvent
	8,  // 18: proto.scg.notification.partner.events.PartnerAgreementExpiringNotification.expiration_date:type_name -> google.protobuf.Timestamp
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_proto_scg_partner_v1_events_proto_init() }
func file_proto_scg_partner_v1_events_proto_init() {
	if File_proto_scg_partner_v1_events_proto != nil {
		return
	}
	file_proto_scg_partner_v1_enums_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_scg_partner_v1_events_proto_rawDesc), len(file_proto_scg_partner_v1_events_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_scg_partner_v1_events_proto_goTypes,
		DependencyIndexes: file_proto_scg_partner_v1_events_proto_depIdxs,
		MessageInfos:      file_proto_scg_partner_v1_events_proto_msgTypes,
	}.Build()
	File_proto_scg_partner_v1_events_proto = out.File
	file_proto_scg_partner_v1_events_proto_goTypes = nil
	file_proto_scg_partner_v1_events_proto_depIdxs = nil
}
